/*
接口文档

接口文档描述

API version: 1.0.0
Contact: pingdongyi@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mmsapi

import (
	"encoding/json"
)

// ResponseBody struct for ResponseBody
type ResponseBody struct {
	Code *int32 `json:"Code,omitempty"`
	Data []Witness `json:"Data,omitempty"`
}

// NewResponseBody instantiates a new ResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBody() *ResponseBody {
	this := ResponseBody{}
	return &this
}

// NewResponseBodyWithDefaults instantiates a new ResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBodyWithDefaults() *ResponseBody {
	this := ResponseBody{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ResponseBody) GetCode() int32 {
	if o == nil || o.Code == nil {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBody) GetCodeOk() (*int32, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ResponseBody) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *ResponseBody) SetCode(v int32) {
	o.Code = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ResponseBody) GetData() []Witness {
	if o == nil || o.Data == nil {
		var ret []Witness
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBody) GetDataOk() ([]Witness, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ResponseBody) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []Witness and assigns it to the Data field.
func (o *ResponseBody) SetData(v []Witness) {
	o.Data = v
}

func (o ResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["Code"] = o.Code
	}
	if o.Data != nil {
		toSerialize["Data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableResponseBody struct {
	value *ResponseBody
	isSet bool
}

func (v NullableResponseBody) Get() *ResponseBody {
	return v.value
}

func (v *NullableResponseBody) Set(val *ResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBody(val *ResponseBody) *NullableResponseBody {
	return &NullableResponseBody{value: val, isSet: true}
}

func (v NullableResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


